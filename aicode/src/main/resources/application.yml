server:
  port: 8080

spring:
  output:
    ansi:
      enabled: always
  main:
    allow-bean-definition-overriding: true
  datasource:
    tidb:
      name: h2-data
      url: jdbc:h2:file:${database:/tmp/aicode};DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;MODE=MYSQL;DATABASE_TO_UPPER=false;AUTO_SERVER=TRUE
      username: ${username:sa}
      password: ${password:sa}
      driver-class-name: org.h2.Driver
      type: com.alibaba.druid.pool.DruidDataSource # 使用druid数据源
      initialSize: 10 #初始化连接数量，最大最小连接数
      maxActive: 100
      minIdle: 3
      maxWait: 600000  #获取连接等待超时的时间
      removeAbandoned: true  #超过时间限制是否回收
      removeAbandonedTimeout: 180 #超过时间限制多长
      timeBetweenEvictionRunsMillis: 600000 #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      minEvictableIdleTimeMillis: 300000 #配置一个连接在池中最小生存的时间，单位是毫秒
      validationQuery: SELECT 1 FROM DUAL #用来检测连接是否有效的sql，要求是一个查询语句
      testWhileIdle: true #申请连接的时候检测
      testOnBorrow: false #申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能
      testOnReturn: false #归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能
      poolPreparedStatements: true #打开PSCache，并且指定每个连接上PSCache的大小
      maxPoolPreparedStatementPerConnectionSize: 100
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      filters: stat #属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：监控统计用的filter:stat 日志用的filter:log4j 防御SQL注入的filter:wall
    uid:
      name: uid-data
      url: jdbc:h2:file:${database:/tmp/aicode};DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;MODE=MYSQL;DATABASE_TO_UPPER=false;AUTO_SERVER=TRUE
      schema: classpath:db/schema.sql
      data: classpath:db/data.sql
      username: ${username:sa}
      password: ${password:sa}
      driver-class-name: org.h2.Driver
      type: com.alibaba.druid.pool.DruidDataSource # 使用druid数据源
      initialSize: 10 #初始化连接数量，最大最小连接数
      maxActive: 100
      minIdle: 3
      maxWait: 600000  #获取连接等待超时的时间
      removeAbandoned: true  #超过时间限制是否回收
      removeAbandonedTimeout: 180 #超过时间限制多长
      timeBetweenEvictionRunsMillis: 600000 #配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      minEvictableIdleTimeMillis: 300000 #配置一个连接在池中最小生存的时间，单位是毫秒
      validationQuery: SELECT 1 FROM DUAL #用来检测连接是否有效的sql，要求是一个查询语句
      testWhileIdle: true #申请连接的时候检测
      testOnBorrow: false #申请连接时执行validationQuery检测连接是否有效，配置为true会降低性能
      testOnReturn: false #归还连接时执行validationQuery检测连接是否有效，配置为true会降低性能
      poolPreparedStatements: true #打开PSCache，并且指定每个连接上PSCache的大小
      maxPoolPreparedStatementPerConnectionSize: 100
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      filters: stat #属性类型是字符串，通过别名的方式配置扩展插件，常用的插件有：监控统计用的filter:stat 日志用的filter:log4j 防御SQL注入的filter:wall
  mvc:
    view:
      suffix: .html
    static-path-pattern: /**
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
  h2:
    console:
      enabled: true
      path: /h2
      settings:
        trace: true
        web-allow-others: true


logging:
  level:
    com:
      ds: debug

  path: /var/log/tomcat/
  config: classpath:logback.xml

mybatis-plus:
  configuration:
    cache-enabled: true